import org.apache.tools.ant.filters.ReplaceTokens
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}
group = pluginGroup
sourceCompatibility = 1.16
targetCompatibility = 1.16

repositories {
	mavenCentral()
	maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

processResources {
	from(sourceSets.main.resources.srcDirs) {
		filter ReplaceTokens, tokens: [version: pluginVersion]
		filter ReplaceTokens, tokens: [name: pluginName]
		filter ReplaceTokens, tokens: [mainClassName: mainClassName]
		filter ReplaceTokens, tokens: [groupId: pluginGroup]
		filter ReplaceTokens, tokens: [author: pluginAuthor]
		filter ReplaceTokens, tokens: [apiVersion: pluginApiVersion]
	}
}

dependencies {
	//Spigot API
	compileOnly 'org.spigotmc:spigot-api:1.16.4-R0.1-SNAPSHOT'
	//Apache Commons IO
	compileOnly 'commons-io:commons-io:2.6'
	//ClassIndex annotation processor
	implementation 'org.atteo.classindex:classindex:3.4'

	annotationProcessor('org.atteo.classindex:classindex:3.4')
}

processResources {
	duplicatesStrategy 'INCLUDE'
}

task testJar(type: ShadowJar) {
	description 'Build a test Jar'
	archiveClassifier = 'DEV'
	
	from sourceSets.main.output
	configurations = [project.configurations.runtimeClasspath]
	
	mergeServiceFiles {
    	path = 'META-INF/annotations'
  	}
	
	destinationDirectory = file("$rootDir/server/plugins")
}

task releaseJar(type: ShadowJar) {
	description 'Build a release Jar'
	archiveClassifier = 'RELEASE'
	
	from sourceSets.main.output
	configurations = [project.configurations.runtimeClasspath]
	
	destinationDirectory = file("$rootDir/releases")
}

task ghActions(type: ShadowJar) {	
	description 'GitHub Actions Task. Do not use in regular development!'
	version = ''
	archiveClassifier = ''
	archiveBaseName = 'output'
	
	from sourceSets.main.output
	configurations = [project.configurations.runtimeClasspath]
	
	destinationDirectory = file("$rootDir/actions")
}